alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- 0.01
D <- (B/z)^2
ni1 <- ceiling(sigma2_h/D)
ni1
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- 0.01
D <- (B/z)^2
ni1 <- ceiling(sigma2_total/D)
ni1
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- 10
D <- (B/z)^2
ni1 <- ceiling(sigma2_total/D)
ni1
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < N){
erro1 <- B[i]
break
}
}
erro1
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < N){
erro1 <- B[i]
break
}
}
cat("Para o erro", erro1, ", o tamanho da amostra é ", ni1)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < N){
erro1 <- B[i]
break
}
}
cat("Para o erro", erro1,", o tamanho da amostra é ", ni1)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < N){
erro1 <- B[i]
break
}
}
cat("Para o erro", erro1," o tamanho da amostra é ", ni1)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < N){
erro1 <- B[i]
break
}
}
cat("Para o erro", erro1, "o tamanho da amostra é", ni1)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < 0.5*N){
erro1 <- B[i]
break
}
}
cat("Para o erro", erro1, "o tamanho da amostra é", ni1)
rm(erro1)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < N){
erros1 <- list(B[i], ni)
break
}
}
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < N){
erros1 <- list(B[i], ni1)
break
}
}
erros1
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < N){
erros1[[i]] <- list(B[i], ni1)
break
}
}
erros1
erros1 <- vector("list")
erros1
erros1 <- c(1,2,3)
erros1
rm(erros1)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
erros1 <- data.fram(B[i],ni1)
}
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
erros1 <- data.frame(B[i],ni1)
}
erros1
erros1
append()
?append
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos1 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
tamanhos1[i] <- ni1
}
data.frame(B, tamanhos1)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos1 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1<N){tamanhos1[i] <- ni1}
}
data.frame(B, tamanhos1)
0.25N
0.25*N
0.75*N
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos1 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total/D)
if(ni1 < N){
tamanhos1[i] <- ni1
}
}
df1 <- data.frame(B = B[tamanhos1 > 0], tamanhos1 = tamanhos1[tamanhos1 > 0])
df1
dados <- read_excel("data/Contagem podcasts - considerar este.xlsx")
dados <- dados[-nrow(dados), -ncol(dados)]
dados <- dados[,-1]
dados_numeros <- dados[,-1]
# Calculando com os estratos sendo colunas
Nh_col <- numeric(ncol(dados_numeros))
for(i in seq_along(dados_numeros)){
Nh_col[i] <- sum(dados_numeros[,i])
}
Wh_col <- Nh_col/N
N <- sum(dados_numeros)
# Calculando com os estratos sendo colunas
Nh_col <- numeric(ncol(dados_numeros))
for(i in seq_along(dados_numeros)){
Nh_col[i] <- sum(dados_numeros[,i])
}
Wh_col <- Nh_col/N
sigma2_h_col <- numeric(ncol(dados_numeros))
for(i in seq_along(dados_numeros)){
sigma2_h_col[i] <- var(dados_numeros[,i])
}
sigma2_total_col <- sum(sigma2_h_col)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos1 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total_col/D)
if(ni1 < N){
tamanhos1[i] <- ni1
}
}
df1 <- data.frame(B = B[tamanhos1 > 0], tamanhos1 = tamanhos1[tamanhos1 > 0])
df1
Wh_col
df1$tamanhos1[1]
nh_col <- Wh_col*df1$tamanhos1[1]
nh_col <- Wh_col*df1$tamanhos1[1]
nh_col
nh_col <- ceiling(Wh_col*df1$tamanhos1[1])
nh_col
sum(nh_col)
ceiling((33922/N)*100)
round((33922/N)*100,2)
Wh_col*2*df1$tamanhos1[1]
sum(Wh_col*2*df1$tamanhos1[1])
13393/N
View(df_numeros)
View(dados_numeros)
nh_col <- ceiling(Wh_col*df1$tamanhos1[1])
df_resumo1 <- data.frame(colnames(dados_numeros), nh_col)
df_resumo1
nh_col <- ceiling(Wh_col*df1$tamanhos1[1])
df_resumo1 <- data.frame("Estratos"=colnames(dados_numeros), "Tamanho de amostra"=nh_col)
df_resumo1
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos2 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni2 <- ceiling((1)/((D/sigma2_total_col)+(1/N)))
if(ni2 < N){
tamanhos2[i] <- ni2
}
}
df2 <- data.frame(B = B[tamanhos2 > 0], tamanhos2 = tamanhos2[tamanhos2 > 0])
df2
nh2_col <- Wh_col*df2$tamanhos2[1]
nh2_col
nh2_col <- ceiling(Wh_col*df2$tamanhos2[1])
df_resumo2 <- data.frame("Estratos"=colnames(dados_numeros), "Tamanho de amostra"=nh2_col)
df_resumo2
N <- sum(dados_numeros)
# Calculando com os estratos sendo colunas
Nh_col <- numeric(ncol(dados_numeros))
for(i in seq_along(dados_numeros)){
Nh_col[i] <- sum(dados_numeros[,i])
}
Wh_col <- Nh_col/N
sigma2_h_col <- numeric(ncol(dados_numeros))
for(i in seq_along(dados_numeros)){
sigma2_h_col[i] <- var(dados_numeros[,i])
}
sigma2_total_col <- sum(sigma2_h_col)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos1 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total_col/D)
if(ni1 < N){
tamanhos1[i] <- ni1
}
}
df1 <- data.frame(B = B[tamanhos1 > 0], tamanhos1 = tamanhos1[tamanhos1 > 0])
df1
nh_col <- ceiling(Wh_col*df1$tamanhos1[1])
df_resumo1 <- data.frame("Estratos"=colnames(dados_numeros), "Tamanho de amostra"=nh_col)
df_resumo1
#| label: tbl-tab3
#| layout-ncol: 1
#| layout-nrow: 1
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos2 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni2 <- ceiling((1)/((D/sigma2_total_col)+(1/N)))
if(ni2 < N){
tamanhos2[i] <- ni2
}
}
df2 <- data.frame(B = B[tamanhos2 > 0], tamanhos2 = tamanhos2[tamanhos2 > 0])
df2
#| label: tbl-tab4
#| layout-ncol: 1
#| layout-nrow: 1
nh2_col <- ceiling(Wh_col*df2$tamanhos2[1])
df_resumo2 <- data.frame("Estratos"=colnames(dados_numeros), "Tamanho de amostra"=nh2_col)
df_resumo2
library(readxl)
library(kableExtra)
N <- sum(dados_numeros)
matriz_dados <- as.matrix(dados_numeros)
colnames(matriz_dados) <- NULL
vetor_dados <- as.vector(matriz_dados)
Nh_linha <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
Nh_linha[i] <- sum(matriz_dados[i,])
}
Wh_linha <- Nh_linha/N
sigma2_h_linha <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
sigma2_h_linha[i] <- var(matriz_dados[i,])
}
sigma2_total_linha <- var(vetor_dados)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos2_linha <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni2_linha <- ceiling((1)/((D/sigma2_total_linha)+(1/N)))
if(ni2_linha < N){
tamanhos2_linha[i] <- ni2_linha
}
}
df2_linha <- data.frame(B = B[tamanhos2_linha > 0], tamanhos2_linha = tamanhos2_linha[tamanhos2_linha > 0])
kable(head(df2_linha))
library(readxl)
library(kableExtra)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos2_linha <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni2_linha <- ceiling((1)/((D/sigma2_total_linha)+(1/N)))
if(ni2_linha < N){
tamanhos2_linha[i] <- ni2_linha
}
}
df2_linha <- data.frame(B = B[tamanhos2_linha > 0], tamanhos2_linha = tamanhos2_linha[tamanhos2_linha > 0])
kable(head(df2_linha))
df2_linha
Nh <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
Nh[i] <- sum(matriz_dados[i,])
}
Wh <- Nh/N
sigma2_h <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
sigma2_h[i] <- var(matriz_dados[i,])
}
sigma2_total <- var(vetor_dados)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni <- ceiling((1)/((D/sigma2_total)+(1/N)))
if(ni < N){
tamanhos[i] <- ni
}
}
df2 <- data.frame(B = B[tamanhos > 0], tamanhos = tamanhos[tamanhos > 0])
kable(head(df2))
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni <- ceiling((1)/((D/sigma2_total)+(1/N)))
if(ni < N){
tamanhos[i] <- ni
}
}
df <- data.frame(B = B[tamanhos > 0], tamanhos = tamanhos[tamanhos > 0])
kable(head(df))
nh <- ceiling(Wh*df$tamanhos[1])
df <- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df, n = 10))
df
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni <- ceiling((1)/((D/sigma2_total)+(1/N)))
if(ni < N){
tamanhos[i] <- ni
}
}
df <- data.frame(B = B[tamanhos > 0], tamanhos = tamanhos[tamanhos > 0])
kable(head(df))
df
nh <- ceiling(Wh*df2_linha$tamanhos2_linha[1])
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
View(df_resumo)
nh <- ceiling(Wh*3806)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
View(df_resumo)
sum(nh)
Wh*3806
sum(Wh*3806)
dados <- read_excel("data/Contagem podcasts.xlsx")
dados <- dados[-nrow(dados), -ncol(dados)]
dados <- dados[,-1]
dados_numeros <- dados[,-1]
matriz_dados <- as.matrix(dados_numeros)
colnames(matriz_dados) <- NULL
vetor_dados <- as.vector(matriz_dados)
N <- sum(dados_numeros)
N
Nh <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
Nh[i] <- sum(matriz_dados[i,])
}
Wh <- Nh/N
sigma2_h <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
sigma2_h[i] <- var(matriz_dados[i,])
}
sigma2_total <- var(vetor_dados)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni <- ceiling((1)/((D/sigma2_total)+(1/N)))
if(ni < N){
tamanhos[i] <- ni
}
}
df <- data.frame(B = B[tamanhos > 0], tamanhos = tamanhos[tamanhos > 0])
kable(head(df))
nh <- ceiling(Wh*3806)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
df
nh <- ceiling(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
3852 - 3781
nh <- bottom(Wh*3781)
nh <- floor(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
nh <- round(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
nh <- round(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
nh <- ceiling(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
3852-3808
nh <- ceiling(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
View(df_resumo)
write.csv(df_resumo)
write.csv(df_resumo, "tabela_infos", row.names=FALSE, quote=FALSE)
write.csv(df_resumo, "tabela_infos.csv", row.names=FALSE, quote=FALSE)
