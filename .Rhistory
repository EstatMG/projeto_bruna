df_resumo1 <- data.frame(colnames(dados_numeros), nh_col)
df_resumo1
nh_col <- ceiling(Wh_col*df1$tamanhos1[1])
df_resumo1 <- data.frame("Estratos"=colnames(dados_numeros), "Tamanho de amostra"=nh_col)
df_resumo1
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos2 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni2 <- ceiling((1)/((D/sigma2_total_col)+(1/N)))
if(ni2 < N){
tamanhos2[i] <- ni2
}
}
df2 <- data.frame(B = B[tamanhos2 > 0], tamanhos2 = tamanhos2[tamanhos2 > 0])
df2
nh2_col <- Wh_col*df2$tamanhos2[1]
nh2_col
nh2_col <- ceiling(Wh_col*df2$tamanhos2[1])
df_resumo2 <- data.frame("Estratos"=colnames(dados_numeros), "Tamanho de amostra"=nh2_col)
df_resumo2
N <- sum(dados_numeros)
# Calculando com os estratos sendo colunas
Nh_col <- numeric(ncol(dados_numeros))
for(i in seq_along(dados_numeros)){
Nh_col[i] <- sum(dados_numeros[,i])
}
Wh_col <- Nh_col/N
sigma2_h_col <- numeric(ncol(dados_numeros))
for(i in seq_along(dados_numeros)){
sigma2_h_col[i] <- var(dados_numeros[,i])
}
sigma2_total_col <- sum(sigma2_h_col)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos1 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni1 <- ceiling(sigma2_total_col/D)
if(ni1 < N){
tamanhos1[i] <- ni1
}
}
df1 <- data.frame(B = B[tamanhos1 > 0], tamanhos1 = tamanhos1[tamanhos1 > 0])
df1
nh_col <- ceiling(Wh_col*df1$tamanhos1[1])
df_resumo1 <- data.frame("Estratos"=colnames(dados_numeros), "Tamanho de amostra"=nh_col)
df_resumo1
#| label: tbl-tab3
#| layout-ncol: 1
#| layout-nrow: 1
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 100, length = 10000)
D <- (B/z)^2
tamanhos2 <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni2 <- ceiling((1)/((D/sigma2_total_col)+(1/N)))
if(ni2 < N){
tamanhos2[i] <- ni2
}
}
df2 <- data.frame(B = B[tamanhos2 > 0], tamanhos2 = tamanhos2[tamanhos2 > 0])
df2
#| label: tbl-tab4
#| layout-ncol: 1
#| layout-nrow: 1
nh2_col <- ceiling(Wh_col*df2$tamanhos2[1])
df_resumo2 <- data.frame("Estratos"=colnames(dados_numeros), "Tamanho de amostra"=nh2_col)
df_resumo2
library(readxl)
library(kableExtra)
N <- sum(dados_numeros)
matriz_dados <- as.matrix(dados_numeros)
colnames(matriz_dados) <- NULL
vetor_dados <- as.vector(matriz_dados)
Nh_linha <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
Nh_linha[i] <- sum(matriz_dados[i,])
}
Wh_linha <- Nh_linha/N
sigma2_h_linha <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
sigma2_h_linha[i] <- var(matriz_dados[i,])
}
sigma2_total_linha <- var(vetor_dados)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos2_linha <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni2_linha <- ceiling((1)/((D/sigma2_total_linha)+(1/N)))
if(ni2_linha < N){
tamanhos2_linha[i] <- ni2_linha
}
}
df2_linha <- data.frame(B = B[tamanhos2_linha > 0], tamanhos2_linha = tamanhos2_linha[tamanhos2_linha > 0])
kable(head(df2_linha))
library(readxl)
library(kableExtra)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos2_linha <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni2_linha <- ceiling((1)/((D/sigma2_total_linha)+(1/N)))
if(ni2_linha < N){
tamanhos2_linha[i] <- ni2_linha
}
}
df2_linha <- data.frame(B = B[tamanhos2_linha > 0], tamanhos2_linha = tamanhos2_linha[tamanhos2_linha > 0])
kable(head(df2_linha))
df2_linha
Nh <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
Nh[i] <- sum(matriz_dados[i,])
}
Wh <- Nh/N
sigma2_h <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
sigma2_h[i] <- var(matriz_dados[i,])
}
sigma2_total <- var(vetor_dados)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni <- ceiling((1)/((D/sigma2_total)+(1/N)))
if(ni < N){
tamanhos[i] <- ni
}
}
df2 <- data.frame(B = B[tamanhos > 0], tamanhos = tamanhos[tamanhos > 0])
kable(head(df2))
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni <- ceiling((1)/((D/sigma2_total)+(1/N)))
if(ni < N){
tamanhos[i] <- ni
}
}
df <- data.frame(B = B[tamanhos > 0], tamanhos = tamanhos[tamanhos > 0])
kable(head(df))
nh <- ceiling(Wh*df$tamanhos[1])
df <- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df, n = 10))
df
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni <- ceiling((1)/((D/sigma2_total)+(1/N)))
if(ni < N){
tamanhos[i] <- ni
}
}
df <- data.frame(B = B[tamanhos > 0], tamanhos = tamanhos[tamanhos > 0])
kable(head(df))
df
nh <- ceiling(Wh*df2_linha$tamanhos2_linha[1])
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
View(df_resumo)
nh <- ceiling(Wh*3806)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
View(df_resumo)
sum(nh)
Wh*3806
sum(Wh*3806)
dados <- read_excel("data/Contagem podcasts.xlsx")
dados <- dados[-nrow(dados), -ncol(dados)]
dados <- dados[,-1]
dados_numeros <- dados[,-1]
matriz_dados <- as.matrix(dados_numeros)
colnames(matriz_dados) <- NULL
vetor_dados <- as.vector(matriz_dados)
N <- sum(dados_numeros)
N
Nh <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
Nh[i] <- sum(matriz_dados[i,])
}
Wh <- Nh/N
sigma2_h <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
sigma2_h[i] <- var(matriz_dados[i,])
}
sigma2_total <- var(vetor_dados)
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2
tamanhos <- numeric(10000)
for(i in seq_along(B)){
D <- (B[i]/z)^2
ni <- ceiling((1)/((D/sigma2_total)+(1/N)))
if(ni < N){
tamanhos[i] <- ni
}
}
df <- data.frame(B = B[tamanhos > 0], tamanhos = tamanhos[tamanhos > 0])
kable(head(df))
nh <- ceiling(Wh*3806)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
df
nh <- ceiling(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
3852 - 3781
nh <- bottom(Wh*3781)
nh <- floor(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
nh <- round(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
nh <- round(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
nh <- ceiling(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
sum(nh)
3852-3808
nh <- ceiling(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
View(df_resumo)
write.csv(df_resumo)
write.csv(df_resumo, "tabela_infos", row.names=FALSE, quote=FALSE)
write.csv(df_resumo, "tabela_infos.csv", row.names=FALSE, quote=FALSE)
library(readxl)
A_B_BASE_DE_DADOS_OFICIAL_ <- read_excel("data/A-B_BASE DE DADOS OFICIAL .xlsx")
View(A_B_BASE_DE_DADOS_OFICIAL_)
excel_sheets("data/A-B_BASE DE DADOS OFICIAL .xlsx")
# Carregando bases com cada podcast
sheet_names <- excel_sheets("data/A-B_BASE DE DADOS OFICIAL .xlsx")
data_frames <- list()
for (sheet_name in sheet_names) {
data_frames[[sheet_name]] <- read_excel(file_path, sheet=sheet_name)
}
sheet_names
# Carregando bases com cada podcast
sheet_names <- excel_sheets("data/A-B_BASE DE DADOS OFICIAL .xlsx")
data_frames <- list()
for (sheet_name in sheet_names) {
data_frames[[sheet_name]] <- read_excel("data/A-B_BASE DE DADOS OFICIAL .xlsx", sheet=sheet_name)
}
str(data_frames)
head(data_frames)
data_frames$`À Deriva`
data_frames$`À Deriva` %>% View()
library(purrr)
data_frames$`À Deriva` %>% View()
# Declaração de funções
separa_planilha <- function(file_path){
sheet_names <- excel_sheets(file_path)
data_frames <- list()
for (sheet_name in sheet_names){
data_frames[[sheet_name]] <- read_excel(file_path, sheet = sheet_name)
}
}
df_AB <- separa_planilha("data/A-B_BASE DE DADOS OFICIAL .xlsx")
rm(df_AB)
df_ab <- separa_planilha("data/A-B_BASE DE DADOS OFICIAL .xlsx")
df_ab
# Declaração de funções
separa_planilha <- function(file_path){
sheet_names <- excel_sheets(file_path)
data_frames <- list()
for (sheet_name in sheet_names){
data_frames[[sheet_name]] <- read_excel(file_path, sheet = sheet_name)
}
return(data_frames)
}
df_ab <- separa_planilha("data/A-B_BASE DE DADOS OFICIAL .xlsx")
df_ab$`À Deriva`
df_ab$`À Deriva` %>% colnames()
df_ab$`À Deriva` %>% colnames()
df_ab$Abraham %>% colnames()
df_ab <- separa_planilha("data/A-B_BASE DE DADOS OFICIAL .xlsx")
df_cd <- separa_planilha("data/C-D_BASE DE DADOS OFICIAL .xlsx")
df_ej <- separa_planilha("data/E-J_BASE DE DADOS OFICIAL.xlsx")
df_ln <- separa_planilha("data/L-N_BASE DE DADOS OFICIAL.xlsx")
df_op <- separa_planilha("data/O-P_BASE DE DADOS OFICIAL .xlsx")
df_rs <- separa_planilha("data/R-S_BASE DE DADOS OFICIAL.xlsx")
df_tw <- separa_planilha("data/T-W_BASE DE DADOS OFICIAL.xlsx")
df_tw$`Tapa da Mão Invisível`
df_ej$`ENTRANDO NA MENTE PODCAST`
df_ej$`Eren Kruger`
seq_along(df_ab)
for(nome in df_ab){
print(nome)
}
dfs <- list(df_ab, df_cd, df_ej, df_ln, df_op, df_rs, df_tw)
for(nome in dfs){
print(nome)
}
colnames(df_ab$`À Deriva`)
rm(data_frames)
df_ab
limpa_indices <- function(data_frame){
for(data_frames in data_frame){
if("...1"  %in% colnames(data_frames)){
data_frames <- data_frames[, -which(colnames(data_frames) == "...1")]
}
}
return(data_frame)
}
df_ab2 <- limpa_indices(df_ab)
df_ab2$`À Deriva`
"...1"  %in% colnames(df_ab$`À Deriva`)
df_ab$`À Deriva`[, -which(colnames(df_ab) == "...1")]
df_ab$`À Deriva`[, -df_ab$`À Deriva`$...1]
library(purrr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
mutate(df_ab$`À Deriva`, ...1 = NULL)
df_ab$`À Deriva`
limpa_indices <- function(data_frame){
for(data_frames in data_frame){
if("...1"  %in% colnames(data_frames)){
data_frames <- mutate(data_frames, ...1 = NULL)
}
}
return(data_frame)
}
df_ab2 <- limpa_indices(df_ab)
df_ab2$Abraham
limpa_indices <- function(data_frame){
for(data_frames in data_frame){
if("...1"  %in% colnames(data_frames)){
data_frames <- mutate(data_frames, ...1 = NULL)
data_frame[[data_frame]] <- data_frames
}
}
return(data_frame)
}
df_ab2 <- limpa_indices(df_ab)
limpa_indices <- function(data_frame){
for(data_frames in data_frame){
if("...1"  %in% colnames(data_frames)){
data_frame[[data_frames]] <- mutate(data_frames, ...1 = NULL)
}
}
return(data_frame)
}
df_ab2 <- limpa_indices(df_ab)
limpa_indices <- function(data_frame){
for(data_frames in data_frame){
if("...1"  %in% colnames(data_frames)){
data_frame[[data_frames]] <- mutate(data_frames, ...1 = NULL)
}else{
data_frame[[data_frames]] <- data_frames
}
}
return(data_frame)
}
df_ab2 <- limpa_indices(df_ab)
limpa_indices <- function(data_frame_list){
for(i in seq_along(data_frame_list)){
if("...1"  %in% colnames(data_frame_list[[i]])){
data_frame_list[[i]] <- mutate(data_frame_list[[i]], ...1 = NULL)
}
}
return(data_frame)
}
df_ab2 <- limpa_indices(df_ab)
View(df_ab2)
View(df_ab2)
limpa_indices <- function(data_frame_list){
for(i in seq_along(data_frame_list)){
if("...1"  %in% colnames(data_frame_list[[i]])){
data_frame_list[[i]] <- mutate(data_frame_list[[i]], ...1 = NULL)
}
}
return(data_frame_list)
}
df_ab2 <- limpa_indices(df_ab)
df_ab2$`À Deriva`
dfs <- list(df_ab, df_cd, df_ej, df_ln, df_op, df_rs, df_tw)
dfs[[1]]
seq_along(dfs[[1]])
dfs[[1]][[1]]
dfs[1]
dfs[[1]]
dfs[[1]][[1]]
for(i in seq_along(dfs)){
dfs[[i]] <- limpa_indices(dfs[[i]])
}
dfs[[1]]
df_ab$`À Deriva`
dfs
dfs <- list(df_ab = df_ab, df_cd = df_cd, df_ej = df_ej, df_ln = df_ln, df_op = df_op, df_rs = df_rs, df_tw = df_tw)
dfs
dfs$df_ab
head(dfs$df_ab)
teste <- dfs$df_ab
head(tese)
head(teste)
teste$`À Deriva`
dfs[[1]]
dfs <- list(df_ab = df_ab, df_cd = df_cd, df_ej = df_ej, df_ln = df_ln, df_op = df_op, df_rs = df_rs, df_tw = df_tw)
for(i in seq_along(dfs)){
dfs[[i]] <- limpa_indices(dfs[[i]])
}
df_ab <- dfs$df_ab
df_cd <- dfs$df_cd
df_ej <- dfs$df_ej
df_ln <- dfs$df_ln
df_op <- dfs$df_op
df_rs <- dfs$df_rs
df_tw <- dfs$df_tw
df_cd$`Camaleão - MGTOW Brasil`
df_ab$Abraham
df_ab$`À Deriva`
3852 - 3781
df_resumo
df_resumo$Estratos
df_resumo
sum(df_resumo$Tamanho.de.amostra)
sample(nrow(df_ab$`À Deriva`), n = 26, replace = FALSE)
sample(nrow(df_ab$`À Deriva`), size = 26, replace = TRUE)
df_ab$`À Deriva`[sample(nrow(df_ab$`À Deriva`), size=26, replace=F),]
View(df_ab$`À Deriva`[sample(nrow(df_ab$`À Deriva`), size=26, replace=F),])
colnames(df_resumo$Estratos)
rownames(df_resumo$Estratos)
rownames(df_resumo$)
rownames(df_resumo)
df_resumo
dim(df_resumo)
nh <- ceiling(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
kable(head(df_resumo, n = 10))
nh <- ceiling(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
dim(df_resumo)
length(nh)
length(Nh)
dim(dados_numeros)
library(readxl)
library(kableExtra)
library(purrr)
library(dplyr)
dados <- read_excel("data/Contagem podcasts.xlsx")
dados <- dados[-nrow(dados), -ncol(dados)]
dados <- dados[,-1]
dados_numeros <- dados[,-1]
View(dados)
df_resumo$Estratos
df_ab$df_resumo$Estratos
dfs[[1]][[1]]
for(tamanho in df_resumo$Tamanho.de.amostra){
print(tamanho)
}
df_ab$`À Deriva`[sample(nrow(df_ab$`À Deriva`), size = 26, replace = FALSE), ]
# Sample sizes table (replace with your actual table)
sample_sizes_table <- data.frame(
Data_Frame_Name = c("df1", "df2", "df3"),  # Data frame names
Sample_Size = c(10, 5, 8)  # Sample sizes for each data frame
)
# List of data frames (replace with your actual list)
list_of_data_frames <- list(
df1 = data.frame(ID = 1:100, Value = rnorm(100)),
df2 = data.frame(ID = 1:50, Value = rnorm(50)),
df3 = data.frame(ID = 1:80, Value = rnorm(80))
)
# Create a list to store sampled data frames
sampled_data_frames <- list()
# Iterate over the sample sizes table
for (i in 1:nrow(sample_sizes_table)) {
data_frame_name <- sample_sizes_table$Data_Frame_Name[i]
sample_size <- sample_sizes_table$Sample_Size[i]
if (data_frame_name %in% names(list_of_data_frames)) {
data_frame <- list_of_data_frames[[data_frame_name]]
# Sample the data frame based on the sample size
sampled_data_frame <- data_frame[sample(1:nrow(data_frame), size = sample_size), ]
# Store the sampled data frame in the list
sampled_data_frames[[data_frame_name]] <- sampled_data_frame
}
}
# Result: 'sampled_data_frames' is a list of data frames, each containing a sample of the specified size
sampled_data_frames
