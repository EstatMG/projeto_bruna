---
title: "Relatório Bruna"
execute: 
  echo: false
  warning: false
format: pdf
editor: source
---

# Bibliotecas

```{r message=FALSE}
library(readxl)
library(kableExtra)
library(purrr)
library(dplyr)
```

```{r}
# Declaração de funções 


separa_planilha <- function(file_path){
  sheet_names <- excel_sheets(file_path)
  data_frames <- list()
  for (sheet_name in sheet_names){
    data_frames[[sub("\\s+$", "", sheet_name)]] <- read_excel(file_path, sheet = sheet_name)
  }
  return(data_frames)
}


limpa_indices <- function(data_frame_list){
  for(i in seq_along(data_frame_list)){
    if("...1"  %in% colnames(data_frame_list[[i]])){
      data_frame_list[[i]] <- mutate(data_frame_list[[i]], ...1 = NULL)
    }
  }
  return(data_frame_list)
}


faz_amostra <- function(df, tab_tamanhos){
  
  amostras <- list()
  
  for (i in 1:length(df)) {
    for (j in 1:nrow(tab_tamanhos)) {
      if (names(df)[i] == tab_tamanhos$Estratos[j]) {
        column_name <- names(df)[i]
        sampled_indices <- sample(nrow(df[[column_name]]), size = tab_tamanhos$Tamanho.de.amostra[j], replace = FALSE)
        amostras[[column_name]] <- df[[column_name]][sampled_indices, ]
      }
    }
  }
  
  return(amostras)
  
}




```

# Saneamento dos dados

```{r}
tamanhos_amostrais <- read_excel("data/Tamanho amostral de cada grupo.xlsx") 
```


```{r}
dados <- read_excel("data/Contagem podcasts.xlsx")
dados <- dados[-nrow(dados), -ncol(dados)]
dados <- dados[,-1]
dados_numeros <- dados[,-1]
```

```{r}
matriz_dados <- as.matrix(dados_numeros)
colnames(matriz_dados) <- NULL
vetor_dados <- as.vector(matriz_dados)
```

```{r message=FALSE}
df_ab <- separa_planilha("data/A-B_BASE DE DADOS OFICIAL .xlsx")
df_cd <- separa_planilha("data/C-D_BASE DE DADOS OFICIAL .xlsx")
df_ej <- separa_planilha("data/E-J_BASE DE DADOS OFICIAL.xlsx")
df_ln <- separa_planilha("data/L-N_BASE DE DADOS OFICIAL.xlsx")
df_op <- separa_planilha("data/O-P_BASE DE DADOS OFICIAL .xlsx")
df_rs <- separa_planilha("data/R-S_BASE DE DADOS OFICIAL.xlsx")
df_tw <- separa_planilha("data/T-W_BASE DE DADOS OFICIAL.xlsx")
```

```{r}
dfs <- list(df_ab = df_ab, df_cd = df_cd, df_ej = df_ej, df_ln = df_ln, df_op = df_op, df_rs = df_rs, df_tw = df_tw)
```

```{r}
for(i in seq_along(dfs)){
  dfs[[i]] <- limpa_indices(dfs[[i]])
}
```

```{r}
df_ab <- dfs$df_ab
df_cd <- dfs$df_cd
df_ej <- dfs$df_ej
df_ln <- dfs$df_ln
df_op <- dfs$df_op
df_rs <- dfs$df_rs
df_tw <- dfs$df_tw
```

# Determinação do tamanho da amostra

Para determinar o tamanho da mostra usaremos a seguinte metodologia: primeiro, calcularemos o tamanho total da amostra, sem considerar os estratos, por meio do plano AAS e, em seguida, usaremos o plano amostral AEpr para determinar o tamanho amostral de cada estrato. Convém resslatar que o referido AAS é subdivido em outras duas subcategorias: a primeira sendo amostragem aleatórias simples com reposição (AASc) e a segunda amostragem aleatória simples sem reposição (AASs). No primeiro caso, temos que a cada unidade amostral aleatoriamente selecionada, ela é reposta na população podendo ser selecionada novamente nas estapas seguintes. Tal procedimento garante que cada unidade amostral coletada seja **independente**. No plano AASs, por outro lado, ao sortearmos um elemento da população, este não poderá ser sorteado novamente nas etapas seguintes, de modo que, as retiradas não são independetes pois a probabilidade de sortear o elemento seguinte é alterada pelo elemento sorteado anteriormente. De modo geral, a escolha por um procedimento ou outro fica a critério do pesquisador. O plano AASc apresenta a importante propriedade da **independência** o que pode facilitar enormemente a realização de inferências futuras. Por outro lado, o efeito do planejamento (EPA), medida usada para quantificar a eficácia de determinado plano amostra, da AASs é sempre melhor que o AASc, com excessão do caso $n=1$. Desse modo, cabe ao pesquisador pesar as vantagens e desvantgens, para fazer sua escolha. Abaixo, escrevemos a definição do EPA

$$EPA=\frac{Var_{AASs}[\overline{y}]}{Var_{AASc}[\overline{y}]}=\frac{\frac{(1-f)S^2}{n}}{\frac{\sigma^2}{n}}=\frac{N-n}{N-1}$$ onde notamos que $EPA\leq1$ sempre, de modo que o numerador é menor que o denominador, implicando que o plano AASs sempre é mais eficiente (variância) que o AASc.

Ademais, efetuaremos o cálculo do tamanho amostral de dois modos: o primeiro será considerando as colunas como estratos e o segundo, as linhas. Isso foi feito para que pudéssemos dar opções ao pesquisador, de modo que ele possa nos informar quais desses elementos são de fato os estratos de sua pesquisa.

Nessa abordagem, inicialmente calcularemos o tamanho total amostral por meio do plano AASc, dado pela fórmula

$$n_{total}=\frac{\sigma^2_{total}}{D}$$ onde $D=\frac{B^2}{z_{\alpha}^2}$ é uma função do erro $B$ escolhido, fixado um nível de confiança $z_{\alpha}$ e a variância total é a soma das variâncias de cada estrato, isto é

$$\sigma^2_{total}=\frac{\sum_{h=1}^H\sigma^2_h}{N}$$ Além disso, a variância de cada estrato é dada pelo plano AE como se segue

$$\sigma^2_h=\frac{\sum_{i=1}^{N_h}}{N_h}$$ Sobre a $D$ é calculada a partir de um erro escolhido pelo pesquisador, que chamamos de $B$ ponderado por um valor dado pelo nível de significância desejado $\alpha$ que, em geral, é usado o valor 5%. É importante salientar que quanto maior o erro que se está disposto a cometer, maior o tamanho amostral necessário. Contudo, se for possível escolher um erro maior, o tamanho da amostra também diminui consideravelmente. Contudo, ao fazer essa escolha, perde-se precisão em suas análises e inferências. É uma troca que se faz para que seja possível reduzir o tamanho amostral. Tal escolha fica a critério do pesquisador, e sua disposição em trabalhar com uma amostra maior ou menor.

Tendo calculado o tamanho total da amostra pelo plano AASc, conseguimos determinar o tamanho de amostra necessário dentro de cada grupo usando o plano AEpr, dado pela fórmula

$$n_h=n\frac{N_h}{N}=nW_h$$,

em que $W_h$ é o peso que cada grupo possui na população.

```{r}
N <- sum(dados_numeros)
```

Nessa segunda abordagem, todo o procedimento para calcular o tamanho da amostra é análogo. A única diferença será no cálculo do $n_{total}$ pois agora ele sera determinado pelo plano AASs, dado pela fórmula

$$n_{total}=\frac{1}{\frac{D}{\sigma_{total}^2}+\frac{1}{N}}$$

A @tbl-tab4 mostra o tamanho amostral de cada estrato quando usamos o tamanho amostral obtido pelo erro mínimo na @tbl-tab3 que é 34058. Esse tamanho pode diminuir se o pesquisador estiver disposta a aumentar o erro.

## Considerando as linhas como estratos

### Abordagem: Amostragem Aleatória Simples com reposição (AASs) em conjunto com Amostragem Estratificada Proporcional (AEpr)

```{r}
Nh <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
  Nh[i] <- sum(matriz_dados[i,])
}
Wh <- Nh/N
sigma2_h <- numeric(nrow(dados_numeros))
for(i in 1:nrow(dados_numeros)){
  sigma2_h[i] <- var(matriz_dados[i,])
}
sigma2_total <- var(vetor_dados)
```

```{r}
alpha <- 0.05
z <- abs(qnorm(alpha/2))
B <- seq(0, 1000, length = 10000)
D <- (B/z)^2

tamanhos <- numeric(10000)
for(i in seq_along(B)){
  D <- (B[i]/z)^2
  ni <- ceiling((1)/((D/sigma2_total)+(1/N))) 
  if(ni < N){
    tamanhos[i] <- ni
  }
}

df <- data.frame(B = B[tamanhos > 0], tamanhos = tamanhos[tamanhos > 0])
kable(head(df))
```

```{r}
nh <- ceiling(Wh*3781)
df_resumo<- data.frame("Estratos"=dados$Podcast, "Tamanho de amostra"=nh)
```

A cliente aceitou um erro de 3.70037, que resulta em um tamanho amostra de 3781 que, arrendodado par acima quando fazemos a conta com as proporções, resulta em 3852.A tabela **"Tamanho amostral de cada grupo"**, do google drive, mostra quanto de tamanho amostral devemos returar de cada podcast.

# Coleta das amostras

```{r}
names(df_ej)[names(df_ej) == "Isentões Podcast Deserto de Ide"] <- "Isentões Podcast Deserto de Ideias"  
names(df_ej)[names(df_ej) == "Gabriel Orcioli Homem Superior"] <- "Gabriel Orcioli Homem Superior Podcast"
# names(df_ej) <- sub("\\s+$", "", names(df_ej))

```

```{r}
set.seed(123456789)
amostras_bruno_ej <- faz_amostra(df_ej, tamanhos_amostrais)
amostras_bruno_ln <- faz_amostra(df_ln, tamanhos_amostrais)
```


